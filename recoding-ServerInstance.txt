'''
Created on Aug 5, 2011

@author: marius
'''

    def GetMetaInfo ( self, rev , force=False):
        """Get the metainfo (actually size and chksum) of some revision
        
        force = True if want to get this values (a hard copy will be done
        if necessary). If not forced, -1 values will be returned if no 
        hard copy exists)
        """
        
        pass
        
    def GetLastRev(self, filepath):
        """Get the id of the last revision of some file
        Get it by the identificator of """
        with self._conn as c:
            row = c.execute ( '''select lastrev from files
                where path=?''' , (filepath,) ).fetchone()
        if row == None:
            return ERR_NOTEXIST
        return row['lastrev']
        
    def MakeDir (self, path ):
        """Create directory ``path''"""
        return ERR_TODO
        
    def GetFullRevision ( self, idRev ):
        """Get a file by its revision identificator (not necessarily
        the most actual version of the file)"""
        
        self._logger.info( 'Getting full revision for %s' , str(idRev) )
        
        with self._conn as c:
            row = c.execute ('''select * from revisions where
                idrev=?''' , (idRev,) ).fetchone()
            
            #check if it can be the easy way
            if row['hardexist'] != 1:
                self._logger.debug ( 'Doing it the hard way' )
                # hard way, let's build the hard copy
                # search for last hard copy first
                deltaList = self.getDeltasSinceEvent ( 'hardexist' , 1 , idRev )
                self._logger.debug ( "(in GetFullRevision) Variable deltaList received: %s" , repr(deltaList) )
                if type(deltaList) == int:
                    self._logger.debug ( "deltaList is a int")
                    return deltaList
                
                # join everything
                #first throw away this, but save for later
                hardRev = deltaList.pop()
                self._logger.debug ( "Getting delta" )
                try:
                    val = str(deltaList.pop())
                    self._logger.debug ( "  - First: %s" , val )
                    delta = Deltas.open(os.path.join(self._deltasdir, val))
                    while deltaList:
                        val = str(deltaList.pop())
                        filename = os.path.join(self._deltasdir, val)
                        self._logger.debug ( "  - Now adding %s, at %s" , val, filename )
                        delta.join (Deltas.open(filename))
                except:
                    raise
                    return ERR_FS
                
                self._logger.debug ( "Empty deltalist, last value: %s" , str(val) )
                
                # the last one, now will have hardcopy
                c.execute ( '''update revisions set hardexist=1
                    where idrev=?''' , (idRev,) )
                
                # this line, saved from
                row = c.execute ( '''select * from revisions 
                    where idrev=?''' , (hardRev,) ).fetchone()
                
                self._logger.info ( "Creating hard revision %s from revision %s" ,
                    idRev , hardRev )
                
                infile =  os.path.join(self._hardsdir,str(row['idrev']))
                outfile = os.path.join(self._hardsdir,str(val))
                delta.patch(infile, outfile)
        
        self._logger.debug ( 'Sending hard revision to client' )
        
        with open ( os.path.join ( self._hardsdir , str(idRev) ) , "rb" ) as f:
            data = Binary ( f.read() )
        return data
